{"version":3,"sources":["components/ContactsForms/ContactsForm.module.scss","components/ContactsForms/ContactsForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactsForms","state","name","number","nameInputId","shortid","generate","phoneInputId","onHandleChange","target","value","setState","handleSubmit","e","preventDefault","addContact","props","console","log","reset","className","s","form__item","onSubmit","this","htmlFor","input__item","type","placeholder","onChange","button__submit","Component","ContactListItem","id","onRemoveContact","contact__item","onClick","ContactList","contacts","contact__list","map","contact","Filter","filter","App","formSubmitHandler","data","addNewContact","newContact","find","alert","prevState","removeContact","onChangeFilter","event","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parcesContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ContactsForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a7a04d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__item\":\"ContactsForm_form__item__MrJE0\",\"input__item\":\"ContactsForm_input__item__1q26m\",\"button__submit\":\"ContactsForm_button__submit__1vcLm\",\"contact__list\":\"ContactsForm_contact__list__3rhrb\",\"contact__item\":\"ContactsForm_contact__item__2wzlo\"};","import { Component } from 'react';\nimport shortid from 'shortid';\n\nimport s from './ContactsForm.module.scss';\n\nclass ContactsForms extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  phoneInputId = shortid.generate();\n\n  // добавление значения в input\n  onHandleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  // сабмит формы\n  handleSubmit = (e) => {\n    // страница не перезагружается\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { addContact } = this.props;\n\n    addContact({ name, number });\n\n    console.log(this.state);\n\n    this.reset();\n  };\n\n  // очистка input\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form__item} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.input__item}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"enter contact name\"\n            onChange={this.onHandleChange}\n          ></input>\n        </label>\n        <label htmlFor={this.phoneInputId}>\n          Pnone number\n          <input\n            className={s.input__item}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            placeholder=\"enter phone number\"\n            onChange={this.onHandleChange}\n          ></input>\n        </label>\n        <button className={s.button__submit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactsForms;\n","import s from '../ContactsForms/ContactsForm.module.scss';\n\nimport PropTypes from 'prop-types';\n\n// добавляем контакт айтем\nconst ContactListItem = ({ id, name, number, onRemoveContact }) => {\n  return (\n    <li key={id} className={s.contact__item}>\n      {name}: {number}\n      <button className={s.button__submit} onClick={() => onRemoveContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactListItem;\n","import s from '../ContactsForms/ContactsForm.module.scss';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\n// список добавленных контактов и удаление\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={s.contact__list}>\n      {contacts.map((contact) => (\n        <ContactListItem {...contact} onRemoveContact={onRemoveContact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={filter} name={filter} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport ContactsForms from './components/ContactsForms/ContactsForm';\n\nimport ContactList from './components/ContactList/ContactList';\n\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    // массив для проверки\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    console.log('Component updated');\n\n    const contacts = localStorage.getItem('contacts');\n    const parcesContacts = JSON.parse(contacts);\n\n    if (parcesContacts) {\n      this.setState({ contacts: parcesContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // сабмит формы\n  formSubmitHandler = (data) => {\n    console.log(data);\n  };\n\n  // добавление нового контакта + метод проверки на существующий контакт\n\n  addNewContact = (newContact) =>\n    this.state.contacts.find((contact) => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState((prevState) => {\n          return {\n            contacts: [...prevState.contacts, newContact],\n          };\n        });\n\n  // удаление контакта из списка\n\n  removeContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  // фильтр контактов\n  onChangeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  //  фильтр контактов\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactsForms addContact={this.addNewContact} />\n        <h1>Contacts</h1>\n        <Filter value={filter} onChange={this.onChangeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}